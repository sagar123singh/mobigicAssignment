# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := muhammara
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=muhammara' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D__STDC_FORMAT_MACROS' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++17

INCS_Debug := \
	-I/home/elakshi/.cache/node-gyp/17.9.0/include/node \
	-I/home/elakshi/.cache/node-gyp/17.9.0/src \
	-I/home/elakshi/.cache/node-gyp/17.9.0/deps/openssl/config \
	-I/home/elakshi/.cache/node-gyp/17.9.0/deps/openssl/openssl/include \
	-I/home/elakshi/.cache/node-gyp/17.9.0/deps/uv/include \
	-I/home/elakshi/.cache/node-gyp/17.9.0/deps/zlib \
	-I/home/elakshi/.cache/node-gyp/17.9.0/deps/v8/include \
	-I$(srcdir)/src \
	-I$(srcdir)/src/deps/PDFWriter \
	-I$(srcdir)/src/deps/FreeType/include

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=muhammara' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D__STDC_FORMAT_MACROS' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-O3 \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++17

INCS_Release := \
	-I/home/elakshi/.cache/node-gyp/17.9.0/include/node \
	-I/home/elakshi/.cache/node-gyp/17.9.0/src \
	-I/home/elakshi/.cache/node-gyp/17.9.0/deps/openssl/config \
	-I/home/elakshi/.cache/node-gyp/17.9.0/deps/openssl/openssl/include \
	-I/home/elakshi/.cache/node-gyp/17.9.0/deps/uv/include \
	-I/home/elakshi/.cache/node-gyp/17.9.0/deps/zlib \
	-I/home/elakshi/.cache/node-gyp/17.9.0/deps/v8/include \
	-I$(srcdir)/src \
	-I$(srcdir)/src/deps/PDFWriter \
	-I$(srcdir)/src/deps/FreeType/include

OBJS := \
	$(obj).target/$(TARGET)/src/ConstructorsHolder.o \
	$(obj).target/$(TARGET)/src/PDFStreamDriver.o \
	$(obj).target/$(TARGET)/src/DictionaryContextDriver.o \
	$(obj).target/$(TARGET)/src/PDFTextStringDriver.o \
	$(obj).target/$(TARGET)/src/PDFDateDriver.o \
	$(obj).target/$(TARGET)/src/PDFArrayDriver.o \
	$(obj).target/$(TARGET)/src/PDFDictionaryDriver.o \
	$(obj).target/$(TARGET)/src/PDFStreamInputDriver.o \
	$(obj).target/$(TARGET)/src/PDFIndirectObjectReferenceDriver.o \
	$(obj).target/$(TARGET)/src/PDFBooleanDriver.o \
	$(obj).target/$(TARGET)/src/PDFLiteralStringDriver.o \
	$(obj).target/$(TARGET)/src/PDFHexStringDriver.o \
	$(obj).target/$(TARGET)/src/PDFNullDriver.o \
	$(obj).target/$(TARGET)/src/PDFNameDriver.o \
	$(obj).target/$(TARGET)/src/PDFIntegerDriver.o \
	$(obj).target/$(TARGET)/src/PDFRealDriver.o \
	$(obj).target/$(TARGET)/src/PDFSymbolDriver.o \
	$(obj).target/$(TARGET)/src/PDFObjectDriver.o \
	$(obj).target/$(TARGET)/src/PDFReaderDriver.o \
	$(obj).target/$(TARGET)/src/DocumentCopyingContextDriver.o \
	$(obj).target/$(TARGET)/src/ObjectsContextDriver.o \
	$(obj).target/$(TARGET)/src/DocumentContextDriver.o \
	$(obj).target/$(TARGET)/src/ImageXObjectDriver.o \
	$(obj).target/$(TARGET)/src/UsedFontDriver.o \
	$(obj).target/$(TARGET)/src/ResourcesDictionaryDriver.o \
	$(obj).target/$(TARGET)/src/XObjectContentContextDriver.o \
	$(obj).target/$(TARGET)/src/FormXObjectDriver.o \
	$(obj).target/$(TARGET)/src/AbstractContentContextDriver.o \
	$(obj).target/$(TARGET)/src/PageContentContextDriver.o \
	$(obj).target/$(TARGET)/src/PDFPageDriver.o \
	$(obj).target/$(TARGET)/src/PDFPageModifierDriver.o \
	$(obj).target/$(TARGET)/src/PDFWriterDriver.o \
	$(obj).target/$(TARGET)/src/PDFPageInputDriver.o \
	$(obj).target/$(TARGET)/src/InputFileDriver.o \
	$(obj).target/$(TARGET)/src/OutputFileDriver.o \
	$(obj).target/$(TARGET)/src/InfoDictionaryDriver.o \
	$(obj).target/$(TARGET)/src/ByteReaderDriver.o \
	$(obj).target/$(TARGET)/src/ByteReaderWithPositionDriver.o \
	$(obj).target/$(TARGET)/src/ByteWriterDriver.o \
	$(obj).target/$(TARGET)/src/ByteWriterWithPositionDriver.o \
	$(obj).target/$(TARGET)/src/ObjectByteReader.o \
	$(obj).target/$(TARGET)/src/ObjectByteReaderWithPosition.o \
	$(obj).target/$(TARGET)/src/ObjectByteWriter.o \
	$(obj).target/$(TARGET)/src/ObjectByteWriterWithPosition.o \
	$(obj).target/$(TARGET)/src/PDFObjectParserDriver.o \
	$(obj).target/$(TARGET)/src/muhammara.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/pdfwriter.a $(builddir)/aesgm.a $(builddir)/freetype.a $(builddir)/jpeg.a $(builddir)/zlib.a $(builddir)/tiff.a $(builddir)/png.a $(obj).target/src/deps/PDFWriter/pdfwriter.a $(obj).target/src/deps/LibAesgm/aesgm.a $(obj).target/src/deps/FreeType/freetype.a $(obj).target/src/deps/LibJpeg/jpeg.a $(obj).target/src/deps/ZLib/zlib.a $(obj).target/src/deps/LibTiff/tiff.a $(obj).target/src/deps/LibPng/png.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS :=

$(obj).target/muhammara.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/muhammara.node: LIBS := $(LIBS)
$(obj).target/muhammara.node: TOOLSET := $(TOOLSET)
$(obj).target/muhammara.node: $(OBJS) $(obj).target/src/deps/PDFWriter/pdfwriter.a $(obj).target/src/deps/LibAesgm/aesgm.a $(obj).target/src/deps/FreeType/freetype.a $(obj).target/src/deps/LibJpeg/jpeg.a $(obj).target/src/deps/ZLib/zlib.a $(obj).target/src/deps/LibTiff/tiff.a $(obj).target/src/deps/LibPng/png.a FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(obj).target/muhammara.node
# Add target alias
.PHONY: muhammara
muhammara: $(builddir)/muhammara.node

# Copy this to the executable output path.
$(builddir)/muhammara.node: TOOLSET := $(TOOLSET)
$(builddir)/muhammara.node: $(obj).target/muhammara.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/muhammara.node
# Short alias for building this executable.
.PHONY: muhammara.node
muhammara.node: $(obj).target/muhammara.node $(builddir)/muhammara.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/muhammara.node

